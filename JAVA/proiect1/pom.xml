<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>proiect1</groupId>
    <artifactId>proiect1</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>


    <name>proiect1 Maven Webapp</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.example.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <junit.version>4.11</junit.version>
        <javax.version>LATEST</javax.version>
        <mockito.version>2.7.13</mockito.version>
        <glassfish.version>2.22.2</glassfish.version>
        <jersey_version>LATEST</jersey_version>
        <hibernate-validator.version>6.0.13.Final</hibernate-validator.version>
        <javax-el.version>3.0.0</javax-el.version>
        <postgress.version>42.2.2</postgress.version>
        <payara.version>4.1.2.172</payara.version>
        <!--<jacoco.it.execution.data.file>${project.build.directory}/coverage-reports/jacoco-it.exec</jacoco.it.execution.data.file>-->
        <!--<jacoco.ut.execution.data.file>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.ut.execution.data.file>-->

        <argLine>-Xmx128m</argLine>

        <skip.integration.tests>true</skip.integration.tests>
        <skip.unit.tests>false</skip.unit.tests>
        <sonar.dynamicAnalysis>reuseReports
        </sonar.dynamicAnalysis>  <!-- Ensure you run mvn install before sonar:sonar -->
        <sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
        <sonar.surefire.reportsPath>/target/surefire-reports</sonar.surefire.reportsPath>
        <sonar.jacoco.reportPath>target/coverage-reports/jacoco-ut.exec
        </sonar.jacoco.reportPath>    <!-- This is the default, put here to be explicit -->
        <sonar.jacoco.itReportPath>target/jacoco-it.exec</sonar.jacoco.itReportPath>
    </properties>

    <distributionManagement>
        <repository>
            <id>Java EE 7</id>
            <url>https://maven.java.net/content/groups/promoted/</url>
        </repository>
    </distributionManagement>

    <dependencies>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>${javax.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <version>${glassfish.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${jersey_version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${jersey_version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jersey_version}</version>
        </dependency>
        <!--<dependency>-->
        <!--<groupId>org.glassfish.jersey.ext</groupId>-->
        <!--<artifactId>jersey-bean-validation</artifactId>-->
        <!--<version>${jersey_version}</version>-->
        <!--</dependency>-->


        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
            <!--<scope>test</scope>-->
        </dependency>


        <!--<dependency>-->
        <!--<groupId>org.glassfish</groupId>-->
        <!--<artifactId>javax.el</artifactId>-->
        <!--<version>${javax-el.version}</version>-->
        <!--<scope>test</scope>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgress.version}</version>
        </dependency>

        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>2.7.1</version>
        </dependency>


        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>2.2.4</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>javax.el</artifactId>
            <version>2.2.4</version>
        </dependency>

        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-core</artifactId>
            <scope>compile</scope>
            <version>1.5.3</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.ws.rs</groupId>
                    <artifactId>jsr311-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Swagger dependencies -->
        <!--&lt;!&ndash; https://mvnrepository.com/artifact/io.swagger/swagger-annotations &ndash;&gt;-->
        <!--<dependency>-->
        <!--<groupId>io.swagger</groupId>-->
        <!--<artifactId>swagger-annotations</artifactId>-->
        <!--<version>1.5.21</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--<groupId>io.swagger</groupId>-->
        <!--<artifactId>swagger-jaxrs</artifactId>-->
        <!--<version>1.5.21</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>io.swagger</groupId>-->
        <!--<artifactId>swagger-servlet</artifactId>-->
        <!--<version>1.5.21</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>io.swagger</groupId>-->
        <!--<artifactId>swagger-jersey-jaxrs</artifactId>-->
        <!--<version>1.5.21</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
        <!--<groupId>io.swagger</groupId>-->
        <!--<artifactId>swagger-jersey2-jaxrs</artifactId>-->
        <!--<version>1.5.21</version>-->
        <!--</dependency>-->


        <!-- https://mvnrepository.com/artifact/org.glassfish.jersey.media/jersey-media-json-jackson -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>2.10.4</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>4.0.6.RELEASE</version>
        </dependency>

        <dependency>
        <groupId>org.glassfish.main.extras</groupId>
        <artifactId>glassfish-embedded-all</artifactId>
        <version>3.1.2.2</version>
        <scope>provided</scope>
        </dependency>

        <!--&lt;!&ndash;https://mvnrepository.com/artifact/fish.payara.extras/payara-embedded-all&ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>fish.payara.extras</groupId>-->
            <!--<artifactId>payara-embedded-all</artifactId>-->
            <!--<version>${payara.version}</version>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>org.apache.activemq</groupId>-->
            <!--<artifactId>activemq-broker</artifactId>-->
            <!--<version>5.14.0</version>-->
        <!--</dependency>-->

        <!--pt consumer-producer-->

        <!--&lt;!&ndash; https://mvnrepository.com/artifact/javax.jms/javax.jms-api &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>javax.jms</groupId>-->
            <!--<artifactId>javax.jms-api</artifactId>-->
            <!--<version>2.0-b07</version>-->
        <!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>org.apache.geronimo.specs</groupId>-->
            <!--<artifactId>geronimo-jms_1.1_spec</artifactId>-->
            <!--<version>1.1.1</version>-->
        <!--</dependency>-->


    </dependencies>

    <build>
        <finalName>proiect1</finalName>
        <!--<pluginManagement>&lt;!&ndash; lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) &ndash;&gt;-->
        <plugins>
            <!--<plugin>-->
            <!--<artifactId>maven-clean-plugin</artifactId>-->
            <!--<version>3.0.0</version>-->
            <!--</plugin>-->
            <!--&lt;!&ndash; see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging &ndash;&gt;-->
            <!--<plugin>-->
            <!--<artifactId>maven-resources-plugin</artifactId>-->
            <!--<version>3.0.2</version>-->
            <!--</plugin>-->
            <!--<plugin>-->
            <!--<artifactId>maven-compiler-plugin</artifactId>-->
            <!--<version>3.7.0</version>-->
            <!--</plugin>-->
            <!--<plugin>-->
            <!--<artifactId>maven-surefire-plugin</artifactId>-->
            <!--<version>2.20.1</version>-->
            <!--</plugin>-->
            <!--<plugin>-->
            <!--<artifactId>maven-war-plugin</artifactId>-->
            <!--<version>3.2.0</version>-->
            <!--</plugin>-->
            <!--<plugin>-->
            <!--<artifactId>maven-install-plugin</artifactId>-->
            <!--<version>2.5.2</version>-->
            <!--</plugin>-->
            <!--<plugin>-->
            <!--<artifactId>maven-deploy-plugin</artifactId>-->
            <!--<version>2.8.2</version>-->
            <!--</plugin>-->

            <!--swagger-->
            <plugin>
                <groupId>com.github.kongchen</groupId>
                <artifactId>swagger-maven-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <apiSources>
                        <apiSource>
                            <basePath>/proiect1</basePath>
                            <info>
                                <title>Swagger Maven Plugin Sample</title>
                                <version>v1</version>
                                <description>This is a sample for swagger-maven-plugin</description>
                            </info>
                            <springmvc>false</springmvc>
                            <locations>
                                ro.nttdata.tutorial.admin.boundary
                            </locations>
                            <swaggerDirectory>${basedir}/src/main/webapp/swagger/generated</swaggerDirectory>
                        </apiSource>
                    </apiSources>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>


            <!--jacoco second try-->

            <!--<plugin>-->
                <!--<artifactId>maven-compiler-plugin</artifactId>-->
                <!--<version>3.1</version>-->
                <!--<configuration>-->
                    <!--<fork>true</fork>-->
                    <!--<executable>C:\Program Files (x86)\Java\jdk1.8.0_181\bin\javac.exe</executable>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <plugin>
            <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.15</version>
                <configuration>
                    <!-- Sets the VM argument line used when unit tests are run. -->
                    <argLine>${surefireArgLine}</argLine>
                    <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!-- Excludes integration tests when unit tests are run. -->
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.15</version>
                <configuration>
                    <argLine>${failsafe.argLine}</argLine>
                </configuration>
                <executions>
                    <!--
                        Ensures that both integration-test and verify goals of the Failsafe Maven
                        plugin are executed.
                    -->
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the VM argument line used when integration tests are run. -->
                            <argLine>${failsafeArgLine}</argLine>
                            <!--
                                Skips integration tests if the value of skip.integration.tests property
                                is true
                            -->
                            <skipTests>${skip.integration.tests}</skipTests>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.5.201505241946</version>
                <executions>
                    <!--
                        Prepares the property pointing to the JaCoCo runtime agent which
                        is passed as VM argument when Maven the Surefire plugin is executed.
                    -->
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                            <!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent.
                            -->
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <!--
                        Ensures that the code coverage report for unit tests is created after
                        unit tests have been run.
                    -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.reporting.outputDirectory}/site/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                            <!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent.
                            -->
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <!--
                        Ensures that the code coverage report for integration tests after
                        integration tests have been run.
                    -->
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.reporting.outputDirectory}/site/jacoco-it</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


        </plugins>
        <!--</pluginManagement>-->
    </build>
</project>



